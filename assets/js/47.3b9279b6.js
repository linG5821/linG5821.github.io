(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{362:function(s,a,e){"use strict";e.r(a);var t=e(17),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"wsl-常见问题汇总"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wsl-常见问题汇总"}},[s._v("#")]),s._v(" WSL 常见问题汇总")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("docker 启动 es 出现 "),a("code",[s._v("max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]")])]),s._v(" "),a("p",[s._v("通常的做法")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/sysctl.conf\n增加 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("vm.max_map_count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("262144")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sysctl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v("\n")])])]),a("p",[s._v("以上方法在 WSL 中如果重启就会失效，在 WSL 请使用以下方法")]),s._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 修改或添加 %userprofile%/.wslconfig\n[wsl2]\nkernelCommandLine = "sysctl.vm.max_map_count=262144"\n')])])])]),s._v(" "),a("li",[a("p",[s._v("WSL2 Docker释放磁盘空间")]),s._v(" "),a("blockquote",[a("p",[s._v("参考 https://github.com/microsoft/WSL/issues/4699#issuecomment-627133168")])]),s._v(" "),a("ol",[a("li",[s._v("删除Docker中的无用镜像")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" system prune\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("退出 Docker Desktop, 并关停 WSL2 实例")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 关停 WSL2")]),s._v("\nwsl "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--shutdown")]),s._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("命令行输入 diskpart, 进入 diskpart 工具")])]),s._v(" "),a("div",{staticClass:"language-cmd extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('select vdisk file="C:\\Users\\<你的用户名>\\AppData\\Local\\Docker\\wsl\\data\\ext4.vhdx"\nattach vdisk readonly\ncompact vdisk\ndetach vdisk\n')])])]),a("p",[a("img",{attrs:{src:"https://ling-root-bucket.oss-cn-hangzhou.aliyuncs.com/picgo/20230519124624.png",alt:""}})])]),s._v(" "),a("li",[a("p",[s._v("WSL2 2.0.x 下内存回收和硬盘空闲空间回收")])])]),s._v(" "),a("p",[s._v("先前的 WSL 有着的内存泄露问题，目前在 "),a("code",[s._v("~/.wslconfig")]),s._v("内设置 `autoMemoryReclaim=gradual`` 可以解决问题，不过需要注意的是，设置了该选项之后不推荐启用 systemd 相关功能。")]),s._v(" "),a("p",[s._v("同时，可以设置 "),a("code",[s._v("sparseVhd=true")]),s._v("，之后新安装的发行版均会自动回收其虚拟硬盘文件的空闲空间。对于已经安装的发行版，可以使用 wsl --manage "),a("Distro",[s._v(" --set-sparse <true/false> 为发行版的虚拟硬盘文件启用该功能。")])],1),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[experimental]\nautoMemoryReclaim=gradual # gradual/dropcache/disabled\nsparseVhd=true\n")])])]),a("ul",[a("li",[s._v("WSL2.0 .wslconfig autoProxy 配置为 true 时会自动使用系统代理，导致的问题")])]),s._v(" "),a("p",[s._v("wsl 任意分发版直接使用系统代理时，如果系统代理配置的是 127.0.0.1 的IP，WSL是无法访问，如果配置的是公网或者内网IP则可以。")]),s._v(" "),a("p",[s._v("当结合v2ray等代理工具使用时，使用其提供的自动代理设置功能同样会导致WSL自动配置 127.0.0.1 的代理IP，同样的使用docker 时 docker-desktop 分发版也会出现相同的问题，导致docker pull/push 无法拉取出现 "),a("code",[s._v("proxyconnect tcp: dial tcp 127.0.0.1:xxxx: connect: connection refused")]),s._v(" 的错误。")]),s._v(" "),a("p",[s._v("解决方案一: 参照"),a("strong",[s._v("WSL代理脚本")]),s._v(" 在docker 和 默认的分发版 "),a("code",[s._v("~/.bashrc")]),s._v(" 中都添加 "),a("code",[s._v(". /mnt/d/Dev/wslproxy/proxy.sh set")]),s._v(", 利用改脚本重设一下代理，在默认WSL当前会话生效，但是在Docker 的WSL分发版中无效的，推送拉取可能不会触发 ~/.bashrc 的加载，此时通过手动重置 docker 分发版的代理可以临时解除一下代理; 同样的此方法还可以设置在 "),a("code",[s._v("/etc/profile")]),s._v(" 里")]),s._v(" "),a("p",[s._v("解决方案二: .wslconfig autoProxy 配置为 false")])])}),[],!1,null,null,null);a.default=r.exports}}]);