import{_ as s,c as a,b as e,o as l}from"./app-DUNtouPH.js";const i={};function t(p,n){return l(),a("div",null,n[0]||(n[0]=[e(`<h2 id="feign" tabindex="-1"><a class="header-anchor" href="#feign"><span>Feign</span></a></h2><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ol><li><p>Feign集成需要注册到注册中心（不使用注册中心需要制定具体的服务地址），且需要集成WEB模块</p></li><li><p>Feign超时问题的解决(Read timed out executing...)</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token comment"># Feign接口调用分两层，Ribbon的调用和Hystrix调用，理论上设置Ribbon的时间即可，但是Ribbon的超时时间和Hystrix的超时时间需要结合起来，按照木桶原则最低的就是Feign的超时时间，建议最好配置超时时间一致</span></span>
<span class="line"> <span class="token comment">#hystrix的超时时间</span></span>
<span class="line"> <span class="token key atrule">hystrix</span><span class="token punctuation">:</span></span>
<span class="line">     <span class="token key atrule">command</span><span class="token punctuation">:</span></span>
<span class="line">         <span class="token key atrule">default</span><span class="token punctuation">:</span></span>
<span class="line">             <span class="token key atrule">execution</span><span class="token punctuation">:</span></span>
<span class="line">             <span class="token key atrule">timeout</span><span class="token punctuation">:</span></span>
<span class="line">                 <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">             <span class="token key atrule">isolation</span><span class="token punctuation">:</span></span>
<span class="line">                     <span class="token key atrule">thread</span><span class="token punctuation">:</span></span>
<span class="line">                         <span class="token key atrule">timeoutInMilliseconds</span><span class="token punctuation">:</span> <span class="token number">30000</span></span>
<span class="line"> <span class="token comment">#ribbon的超时时间</span></span>
<span class="line"> <span class="token key atrule">ribbon</span><span class="token punctuation">:</span></span>
<span class="line">     <span class="token key atrule">ReadTimeout</span><span class="token punctuation">:</span> <span class="token number">30000</span></span>
<span class="line">     <span class="token key atrule">ConnectTimeout</span><span class="token punctuation">:</span> <span class="token number">30000</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>FeignClient GET 请求POJO类型参数的接口 或者接口参数未加@RequestParam(&quot;{paramName}&quot;),包括未指定value值导致GET请求转为POST请求。</p><ul><li><p>原因： Feign底层默认使用HttpURLConnection 未加@RequestParam 的参数会被当做Body传递, HttpURLConnection传递Body需要设置 connection.setDoOutput(true); Feign 底层就转换了 GET 为 POST。</p></li><li><p>处理方式1: 拆分 Pojo 对象为多个参数,并添加@RequestParam(&quot;{paramName}&quot;)。</p></li><li><p>处理方式2: 更换底层使用Http请求客户端 Apache HttpClient 或 OkHttp 这样会导致 GET 传递的参数无法获取到。</p></li><li><p>处理方式3: 修改接收端参数为MAP。</p></li></ul></li><li><p>FeignClient GET请求POJO类型的接口参数无法获取。</p><ul><li><p>处理方式1: 拆分Pojo对象为多个参数,并添加@RequestParam(&quot;{paramName}&quot;)</p></li><li><p>处理方式2: 修改接收端参数为MAP</p></li><li><p>处理方式3: 参数增加 @RequestBody 注解此时接收的参数是GET发送了 body 参数,所以通过 postman 之类的调用时需要通过body传参</p></li><li><p>处理方式4: spring-cloud 2.1 之后参数添加 @SpringQueryMap 注解可以当做 query 参数解析</p></li></ul></li></ol>`,3)]))}const c=s(i,[["render",t]]),u=JSON.parse('{"path":"/java/boot_cloud.html","title":"","lang":"en-US","frontmatter":{},"git":{"updatedTime":1754642790000,"contributors":[{"name":"lsj","username":"lsj","email":"lishaojie@aithu.com","commits":1,"url":"https://github.com/lsj"}],"changelog":[{"hash":"68c8fe668940c6c2d5e4fcf94e88aebaeecb290d","time":1754642790000,"email":"lishaojie@aithu.com","author":"lsj","message":"updte"}]},"filePathRelative":"java/boot&cloud.md"}');export{c as comp,u as data};
